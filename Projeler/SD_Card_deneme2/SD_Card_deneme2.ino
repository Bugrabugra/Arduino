//SCL = A5
//SDA = A4

//https://ufukyildirim.com.tr/arduino-ssd1306-128x64-oled-spi-ile-resim-bitmap-goruntuleme/

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const unsigned char Untitled [] PROGMEM = 
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x60, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x70, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0xF0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7F, 0x81, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x03, 0xE0, 0x00,
0x00, 0x00, 0x00, 0x0F, 0xF0, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x81, 0xFF, 0x80, 0x00,
0x00, 0x00, 0x00, 0x3C, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1F, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0xF0, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x78, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0xE0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00,
0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00,
0x7E, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x7E, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00,
0x7E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x7E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
0x7E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x7E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
0x7E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x3E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xFC,
0x3E, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xFC, 0x3F, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xFC,
0x3F, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xFE, 0x3F, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xFE,
0x3F, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xFE, 0x3F, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFE,
0x3F, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFE, 0x1F, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xFC,
0x1F, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xFC, 0x1F, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0xF8,
0x1F, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x0F, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
0x0F, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x0F, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
0x07, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x07, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
0x03, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x03, 0xFF, 0x7F, 0xFF, 0xFF, 0xFC, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00,
0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00,
0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00
};

void setup()
{
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
}

void loop()

{
  display.clearDisplay();
  display.drawBitmap(0, 0, Untitled, 64, 64, 1);
  display.setTextSize(1);      // Normal 1:1 pixel scale
  display.setTextColor(WHITE); // Draw white text
  display.cp437(true);         // Use full 256 char 'Code Page 437' font
  display.display();
}
